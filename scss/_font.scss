:root {
    --header-1: calc(20px + 10vw);
    --header-2: calc(20px + 5vw);
    --header-3: calc(10px + 5vw);
    --header-4: calc(10px + 3vw);
    --header-5: calc(10px + 1vw);
    --header-6: calc(8px + .5vw);
    --p: calc(8px + .5vw);
    --text-decoration-size: 2px;
    --text-decoration-color: var(--base-color);
    --letter-spacing: auto;
    --font-weight: normal;
}

body {
    font-size: var(--p);
}

$text-decoration:("none", "underline", "overline", "line-through", "blink", "inherit", "initial", "revert", "unset", "solid", "double", "dotted", "dashed", "wavy", "none");
$text-transform:("capitalize", "uppercase", "lowercase", "full-width", "full-size-kana");
$text-align:("start", "end", "left", "right", "center", "justify", "match-parent");
$text-transfrom:("none", "capitalize" "Aa", "uppercase" "AA", "lowercase" "aa");
// 次方計算機
@function pow($number, $exponent) {
    $value: 1;
    @if $exponent>0 {
        @for $i from 1 through $exponent {
            $value: $value * $number;
        }
    }
    @return $value;
}

// Rules
@mixin font($class) {
    // Font-weight
    .#{$class}fw {
        @for $i from 1 to 10 {
            &-#{$i*100} {
                --font-weight: #{$i*100};
            }
        }
    }
    // h1-h5 class type of auto
    @for $i from 1 to 6 {
        .#{$class}h#{$i},
        h#{$i} {
            --line-height: ; //需要設定
            --header-size: var(--header-#{$i});
            font-size: var(--header-#{$i});
            letter-spacing: var(--letter-spacing);
            font-weight: var(--font-weight);
        }
    }
    // diaplay power-size
    .#{$class}display- {
        @for $i from 1 to 6 {
            &#{$i} {
                font-size: calc(var(--header-size)*#{pow(1.3, $i)});
            }
        }
    }
    .#{$class}text- {
        // Text-decoration
        @for $i from 1 to 10 {
            &#{$i} {
                text-decoration: calc(#{pow(1.3, $i)}*var(--header-size));
            }
        }
        @each $name in $text-transform {
            &#{$name} {
                text-transform: #{$name};
            }
        }
        @each $name in $text-decoration {
            &#{$name} {
                text-decoration:#{$name};
                text-decoration-color: var(--text-decoration-color);
            }
        }
        // text-align
        @each $name in $text-align {
            &#{$name} {
                text-align: #{$name};
            }
        }
        // text-transform
        @each $name,
        $short in $text-transfrom {
            &#{$name} {
                text-transform: #{$name};
            }
            &#{$short} {
                text-transform: #{$name};
            }
        }
    }
    .#{$class}text- {}
    // line-height
    .#{$class}line-height- {
        @for $i from 1 to 10 {
            &#{$i} {
                line-height: calc(#{pow(1.3, $i)}*var(--line-height));
            }
        }
    }
}

// Media Worker
$media-worker:'' '',
#{'s'+'\\'+':'} 'and (max-width: #{$media-s})',
#{'sm'+'\\'+':'} 'and (min-width: #{$media-sm})',
#{'m'+'\\'+':'} 'and (min-width: #{$media-m})',
#{'ml'+'\\'+':'} 'and (min-width: #{$media-ml})',
#{'l'+'\\'+':'} 'and (min-width: #{$media-l})';
@each $class,
$media in $media-worker {
    @media screen #{$media} {
        @include font($class);
    }
}

// Hover Worker #{$states}
// @include font(#{'hover'+'\\'+':'}, #{':hover'});