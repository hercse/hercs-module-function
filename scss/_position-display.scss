:root {
    --position-base: ;
}

$position: ("static", "relative", "absolute", "sticky", "fixed");
$way:("top", "bottom", "left", "right");
$display:( "block", "inline", "inline-block", "flex", "inline-flex", "grid", "inline-grid", "flow-root", "none", "contents", "table", "table-row", "list-item", "inherit", "initial", "revert", "unset");
// 次方計算機
@function pow($number, $exponent) {
    $value: 1;
    @if $exponent>0 {
        @for $i from 1 through $exponent {
            $value: $value * $number;
        }
    }
    @return $value;
}

// rules
@mixin position-display($class) {
    @each $name in $position {
        .#{$class}#{$name} {
            position: #{$name}!important;
        }
    }
    @each $name in $way {
        .#{$class}#{$name}-auto {
            #{$name}: auto;
        }
        .#{$class}#{$name}-0 {
            #{$name}: 0;
        }
        @for $i from 1 to 10 {
            .#{$class}#{$name}-#{$i} {
                #{$name}: clac(var(--position-base)*#{pow(1.3, $i)});
            }
        }
    }
    .d- {
        @each $name in $display {
            &#{$name} {
                display: #{$name}!important;
            }
        }
    }
}

// Media Worker
$media-worker:'' '',
#{'s'+'\\'+':'} 'and (max-width: #{$media-s})',
#{'sm'+'\\'+':'} 'and (min-width: #{$media-sm})',
#{'m'+'\\'+':'} 'and (min-width: #{$media-m})',
#{'ml'+'\\'+':'} 'and (min-width: #{$media-ml})',
#{'l'+'\\'+':'} 'and (min-width: #{$media-l})';
@each $class,
$media in $media-worker {
    @media screen #{$media} {
        @include position-display($class);
    }
}