:root {
    --grid-cols: 12;
    --grid-gap-x: 0;
    --grid-gap-y: 0;
}

// **Rules
@mixin ccg($var) {
    // Framework-col
    .#{$var}ccg- {
        width: 100%;
        display: grid;
        @for $cols from 1 to 25 {
            &#{$cols} {
                --grid-cols: #{$cols};
            }
        }
    }
    // Framework
    .#{$var}ccg {
        width: 100%;
        display: grid;
        grid-gap: var(--grid-gap-y) var(--grid-gap-x);
        grid-template-columns: repeat(var(--grid-cols), 1fr);
    }
    // Items
    .#{$var}#{'ccg'+'\\'+':'} {
        @for $start from -1 to 36 {
            @for $end from -1 to 36 {
                &#{$start}-#{$end} {
                    grid-column: #{$start}/#{$end};
                }
            }
        }
    }
}

// Media Worker
$media-worker:'' '',
#{'s'+'\\'+':'} 'and (max-width: #{$media-s})',
#{'sm'+'\\'+':'} 'and (min-width: #{$media-sm})',
#{'m'+'\\'+':'} 'and (min-width: #{$media-m})',
#{'ml'+'\\'+':'} 'and (min-width: #{$media-ml})',
#{'l'+'\\'+':'} 'and (min-width: #{$media-l})';
@each $class,
$media in $media-worker {
    @media screen #{$media} {
        @include ccg($class);
    }
}