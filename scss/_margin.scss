:root {
    --margin: calc(5px + 1vw);
    --padding: calc(5px + 1vw);
}

$margin:"-top" "t",
"-right" "r",
"-bottom" "b",
"-left" "l",
"" "";
$margins:"-top" "-bottom" "y",
"-right" "-left" "x";
// 次方計算機
@function pow($number, $exponent) {
    $value: 1;
    @if $exponent>0 {
        @for $i from 1 through $exponent {
            $value: $value * $number;
        }
    }
    @return $value;
}

$m-p__list:"margin""m",
"padding""p";
// Rules
@mixin margin($var) {
    @each $padding,
    $p in $m-p__list {
        // Rules #{$p} 代表 p 或 m，#{$padding}代表margin 或 padding。重複一變比較乾淨
        .#{$var}#{$p} {
            @each $original,
            $short in $margin {
                &#{$short}- {
                    @for $i from 20 to 0 {
                        &#{$i} {
                            #{$padding}#{$original}: calc(#{pow(1.3, $i)} * var(--#{$padding}));
                        }
                    }
                    &0 {
                        #{$padding}#{$original}: 0;
                    }
                    &auto {
                        #{$padding}#{$original}: auto;
                    }
                }
            }
            @each $a,
            $b,
            $short in $margins {
                &#{$short} {
                    @for $i from 20 to 0 {
                        &-#{$i} {
                            #{$padding}#{$a}: calc(#{pow(1.3, $i)} * var(--#{$padding}));
                            #{$padding}#{$b}: calc(#{pow(1.3, $i)} * var(--#{$padding}));
                        }
                    }
                    &-0 {
                        #{$padding}#{$a}: 0;
                        #{$padding}#{$b}: 0;
                    }
                    &auto {
                        #{$padding}#{$a}: auto;
                        #{$padding}#{$b}: auto;
                    }
                }
            }
        }
    }
}

// Media Worker
$media-worker:'' '',
#{'s'+'\\'+':'} 'and (max-width: #{$media-s})',
#{'sm'+'\\'+':'} 'and (min-width: #{$media-sm})',
#{'m'+'\\'+':'} 'and (min-width: #{$media-m})',
#{'ml'+'\\'+':'} 'and (min-width: #{$media-ml})',
#{'l'+'\\'+':'} 'and (min-width: #{$media-l})';
@each $class,
$media in $media-worker {
    @media screen #{$media} {
        @include margin($class);
    }
}